# Generated by Django 5.0.4 on 2024-05-02 18:27

import cloudinary.models
import django.core.validators
import django.db.models.deletion
import djrichtextfield.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Enter the author's first name", max_length=100, validators=[django.core.validators.RegexValidator(message='Names must contain only letters, spaces, commas, periods, or hyphens.', regex='^[a-zA-Z,.\\s-]+$')], verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, help_text="Optional: Enter the author's middle name or initial", max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Names must contain only letters, spaces, commas, periods, or hyphens.', regex='^[a-zA-Z,.\\s-]+$')], verbose_name='Middle Name')),
                ('last_name', models.CharField(help_text="Enter the author's last name", max_length=100, validators=[django.core.validators.RegexValidator(message='Names must contain only letters, spaces, commas, periods, or hyphens.', regex='^[a-zA-Z,.\\s-]+$')], verbose_name='Last Name')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the genre', max_length=100, verbose_name='Genre Name')),
                ('description', models.TextField(help_text='Enter a description for this genre', verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the book', max_length=255, verbose_name='Book Title')),
                ('slug', models.SlugField(help_text='A URL-friendly name is entered automatically on save')),
                ('publication_year', models.IntegerField(blank=True, help_text='Enter the year the book was published, must be a four-digit year', null=True, validators=[django.core.validators.MaxValueValidator(2024), django.core.validators.MinValueValidator(1000)], verbose_name='Publication Year')),
                ('isbn', models.CharField(help_text='Enter the ISBN number of the book', max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='ISBN must only contain numbers and hyphens.', regex='^[\\d-]+$')], verbose_name='ISBN')),
                ('added_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Added')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Updated')),
                ('deleted_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Deleted')),
                ('description', djrichtextfield.models.RichTextField(blank=True, help_text='Enter a brief description of the book', verbose_name='Description')),
                ('image', cloudinary.models.CloudinaryField(default='https://res.cloudinary.com/dsbcjtatz/image/upload/v1714578907/scroll_core/book_cover_images/default-book-cover_t2lyio.webp', max_length=255, verbose_name='image')),
                ('image_alt', models.CharField(default='Book cover', max_length=255)),
                ('user', models.ForeignKey(help_text='Select the owner of the book', on_delete=django.db.models.deletion.CASCADE, related_name='books', to=settings.AUTH_USER_MODEL)),
                ('genre', models.ForeignKey(help_text='Select the genre of the book', on_delete=django.db.models.deletion.CASCADE, related_name='books', to='scroll_core.genre')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='Select the author associated with a book', on_delete=django.db.models.deletion.CASCADE, related_name='book_authors', to='scroll_core.author')),
                ('book', models.ForeignKey(help_text='Select the book associated with an author', on_delete=django.db.models.deletion.CASCADE, related_name='book_authors', to='scroll_core.book')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', cloudinary.models.CloudinaryField(default='https://res.cloudinary.com/dsbcjtatz/image/upload/v1714579934/scroll_core/user_profile_image/default-profile-image_qscipu.webp', max_length=255, verbose_name='image')),
                ('bio', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
